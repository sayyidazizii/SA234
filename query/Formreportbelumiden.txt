using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using Microsoft.Reporting.WinForms;

namespace ISA.Pabrik.Nakayama.Finance.Keuangan.Piutang.Report
{
    public partial class frmRptTransaksiBelumIden : ISA.Controls.BaseForm
    {
        public frmRptTransaksiBelumIden()
        {
            InitializeComponent();
            rangeDateBox1.FromDate = Class.GlobalVar.GetServerDate.AddDays(-7);
            rangeDateBox1.ToDate = Class.GlobalVar.GetServerDate;
        }

        private void frmRptTransaksiBelumIden_Load(object sender, EventArgs e)
        {

        }

        private void cmdCancel_Click(object sender, EventArgs e)
        {
            this.Close();
        }

        private void cmdYes_Click(object sender, EventArgs e)
        {
            DataTable dtReport = new DataTable();

            if (rbPenerimaan.Checked)
            {
                //dtReport = BLL.Kasir.PenerimaanUang.DBGetListByCustomer(Guid.Empty, (DateTime)rangeDateBox1.FromDate, (DateTime)rangeDateBox1.ToDate, 0);
                dtReport = BLL.Kasir.PenerimaanUang.DBGetListByCustomer(Guid.Empty, (DateTime)rangeDateBox1.FromDate, (DateTime)rangeDateBox1.ToDate, 0);
            }
            else if (rbKPJ.Checked)
            {
                dtReport = BLL.Piutang.clsPiutangDataTrading.DBGetByCustomerID(Guid.Empty, "KPJ", (DateTime)rangeDateBox1.FromDate, (DateTime)rangeDateBox1.ToDate);
            }
            else if (rbRetur.Checked)
            {
                dtReport = BLL.Piutang.clsPiutangDataTrading.DBGetByCustomerID(Guid.Empty, "RET", (DateTime)rangeDateBox1.FromDate, (DateTime)rangeDateBox1.ToDate);
            }
            else if (rbKRJ.Checked)
            {
                dtReport = BLL.Piutang.clsPiutangDataTrading.DBGetByCustomerID(Guid.Empty, "KRJ", (DateTime)rangeDateBox1.FromDate, (DateTime)rangeDateBox1.ToDate);
            }
            else if (rbHI.Checked)
            {
                dtReport = BLL.HIDKN.clsHIDKN.DBGetForPiutang(Guid.Empty, (DateTime)rangeDateBox1.FromDate, (DateTime)rangeDateBox1.ToDate, 0, Guid.Empty);
            }

            if (dtReport.Rows.Count > 0)
            {
                GenerateReport(dtReport);
            }
            else
            {
                MessageBox.Show("Tidak ada data");
            }
        }

        public void GenerateReport(DataTable dt)
        {
            List<ReportParameter> rptparams = new List<ReportParameter>();
            rptparams.Add(new ReportParameter("Periode", ((DateTime)rangeDateBox1.FromDate).ToString("dd-MM-yyyy") + " s.d. " + ((DateTime)rangeDateBox1.ToDate).ToString("dd-MM-yyyy")));
            rptparams.Add(new ReportParameter("User", SecurityManager.UserID));
            rptparams.Add(new ReportParameter("Tanggal", Class.GlobalVar.GetServerDate.ToString("dd-MM-yyyy HH:mm:ss")));

            frmReportViewer ifrmreport = new frmReportViewer();
            if (rbPenerimaan.Checked)
            {
                rptparams.Add(new ReportParameter("Judul", "Laporan Penerimaan Uang Belum Iden"));
                ifrmreport = new frmReportViewer("Keuangan.Piutang.Report.rptPenerimaanBelumIden.rdlc", rptparams, dt, "dsTransaksiBelumIden_Penerimaan");
            }
            else if (rbKPJ.Checked)
            {
                rptparams.Add(new ReportParameter("Judul", "Laporan Koreksi Penjualan Belum Iden"));
                ifrmreport = new frmReportViewer("Keuangan.Piutang.Report.rptKoreksiJualBelumIden.rdlc", rptparams, dt, "dsTransaksiBelumIden_KoreksiJual");
            }
            else if (rbRetur.Checked)
            {
                rptparams.Add(new ReportParameter("Judul", "Laporan Retur Penjualan Belum Iden"));
                ifrmreport = new frmReportViewer("Keuangan.Piutang.Report.rptReturJualBelumIden.rdlc", rptparams, dt, "dsTransaksiBelumIden_ReturJual");
            }
            else if (rbKRJ.Checked)
            {
                rptparams.Add(new ReportParameter("Judul", "Laporan Koreksi Retur Penjualan Belum Iden"));
                ifrmreport = new frmReportViewer("Keuangan.Piutang.Report.rptKoreksiReturJualBelumIden.rdlc", rptparams, dt, "dsTransaksiBelumIden_KoreksireturJual");
            }
            else if (rbHI.Checked)
            {
                rptparams.Add(new ReportParameter("Judul", "Laporan Transaksi HI / DKN Belum Iden"));
                ifrmreport = new frmReportViewer("Keuangan.Piutang.Report.rptTransHIBelumIden.rdlc", rptparams, dt, "dsTransaksiBelumIden_HI");
            }

            ifrmreport.Show();
        }
    }
}
